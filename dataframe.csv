Where is your company/university located?	You mainly work for a...	Which is your level of knowledge of DevOps practices?	Software deployment using increments in small batches.	Limit the work in progress (WIP).	Use of visual management tools (physical boards, specific software...).	Choose the visual management tools used or taught.	Retrieve feedback from other departments (such as production) or users.	Choose the types of feedback received or taught.	Pass code through lightweight change approvals.	Choose the types of lightweight change approvals used or taught.	Continuous Integration (CI).	Continuous Deployment/Delivery (CD).	Test Automation inside a Continuous Integration (CI) environment.	Choose the Test methods used or taught in a Continuous Integration (CI) environment.	Test Automation inside a Staging environment.	Choose the types of Test methods used or taught in a Staging environment.	Version Control.	Choose the elements used or taught with Version Control.	Trunk-Based Development.	Choose the Version Control development method used or taught.	Shift Left on Security.	Loosely Coupled Architectures.	In the Coupled Architectures used or taught, each deployment involves...	In the Loosely Coupled Architectures, Microservices are used or taught.	When partners work together, teams...	Agile development.	Choose the agile development methodologies or frameworks used or taught.	How many years of experience do you have in using or teaching DevOps practices?	How do you rate the degree of implementation of DevOps in your organization/department?	How do you rate the value that DevOps adds to your organization/clients/students?
Spain	1	2	1	1	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules	0	Git-flow	1	0	The whole system		Are self-organizing	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	1	2	4
Spain	1	3	1	0	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests	0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	1	1		0.0	Are self-organizing	0		1	3	3
Spain	1	4	1	1	1	Software	1	Metrics (usage, errors, load...)	1	From development team	1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing, Choose their own development tools	0		3	4	5
Spain	1	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...)	1	From development team	1	1	1		1	Unit tests, Integration tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	0	Git-flow	0	1		1.0	Choose their own development tools	1	Scrum, Kanban, Lean	2	5	5
Spain	1	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Smoke tests, Load tests	1	Unit tests, Integration tests, Smoke tests, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules	1		1	1		1.0	Are self-organizing	1	Hybrid (Agile and non-Agile methodologies together)	3	4	4
Turkey	1	4	1	1	1	Physical boards, Software	1	Metrics (usage, errors, load...)	1	From client	1	1	1	Unit tests, Integration tests, Load tests	1	Load tests	1	Dependencies, Test data management	1		1	1		1.0	Are self-organizing	1	Scrum, Kanban	3	5	5
Moldova	1	5	1	1	1	Software	1	Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT	0		1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	0	Several modules		Are self-organizing	1	Scrum, Kanban	1	4	5
Romania	1	4	1	0	1	Physical boards, Software, Confluence, Jira	1	Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT)	1	Integration tests, Smoke tests	1	Source code, Scripts, Built files from source code	1		0	0	The whole system		Are self-organizing	1	Scrum, Kanban, Lean	2	3	5
Moldova	1	5	1	1	0		1	Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	0	Git-flow	0	0	The whole system		Are self-organizing	1	Scrum	2	4	5
Republic of Macedonia	1	4	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	0	Multiple branches (per client, release...)	1	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban, Lean	3	4	3
Portugal	1	3	1	1	1	Software	0		1	From development team, From team coordinator/manager	0	0	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	0	1	5
Spain	1	1	0	1	1	Software	1	Explicit feedback (surveys, emails...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code, Test data management	1		1	1		1.0	Choose their own development tools	1	Lean	0	1	1
Spain	1	4	1	0	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Load tests	0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing	1	Scrum	2	2	4
Spain	1	1	0	0	1	Physical boards	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		0	0	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	0	Several modules		Are self-organizing	0		0	1	3
Spain	1	5	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team	1	1	1	Unit tests, Integration tests	0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Test data management	0	Git-flow	1	1		1.0	Are self-organizing, Choose their own development tools	1	Kanban, Hybrid (Agile and non-Agile methodologies together)	5	3	5
Spain	1	3	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		0	0	0		1	Unit tests	1	Source code, Dependencies	1		0	0	The whole system		Are self-organizing	1	Scrum	1	2	3
Spain	1	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...), Valoraciones del cliente (directas)	0		1	1	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	1		0	0	The whole system		Are self-organizing	1	Scrum	0	1	1
Spain	1	3	1	0	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	0	Git-flow	0	0	Several modules		Are self-organizing	1	Scrum, Extreme Programming	3	3	3
Spain	1	3	0	0	0		0		0		0	0	0		0		1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	1		0.0	Are self-organizing	0		0	3	4
Denmark	1	4	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team	1	1	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum	1	4	5
Spain	1	3	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Load tests	1	Integration tests, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban	1	4	5
United States of America	1	4	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Test data management	1		1	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Lean	4	5	5
Spain	1	3	1	1	1	Physical boards, Software	1	Metrics (usage, errors, load...)	1	From client	1	0	1	Unit tests, Integration tests	1	Unit tests	1	Source code, Scripts	0	Git-flow	0	0	Several modules		Are self-organizing	1	Scrumban	4	3	3
Spain	1	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From team coordinator/manager	1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	1		0	0	Several modules		Are self-organizing	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	5	3	4
Spain	1	3	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager, Continuous inspection software	1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code	0	Multiple branches (per client, release...)	1	1		0.0	Are self-organizing	1	Scrumban, Extreme Programming	2	2	4
Spain	1	4	1	0	0		0		1	From development team	1	1	1	Unit tests	0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	1	0	The whole system		Are self-organizing, Choose their own development tools	1	Hybrid (Agile and non-Agile methodologies together)	1	2	4
Spain	1	2	0	1	1	Software	1	Explicit feedback (surveys, emails...)	0		0	0	0		0		1	Source code, Dependencies, Scripts	0	Multiple branches (per client, release...)	0	0	The whole system		Are self-organizing	1	Scrum	0	1	1
Spain	1	2	1	1	1	Software	1	Metrics (usage, errors, load...)	1	From client, From team coordinator/manager	1	1	0		0		1	Source code, Dependencies, Built files from source code	1		0	0	Several modules		Are self-organizing	1	Scrum, Kanban, Lean	5	4	4
Spain	1	5	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...), logs	1	From development team, From team coordinator/manager	1	1	0		0		1	Source code, Dependencies, Firewall rules, Test data management	0	Git-flow	0	0	The whole system		Are self-organizing, Choose their own development tools	1	Scrum	1	4	4
Spain	1	2	1	0	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code, Dependencies	1		0	0	Several modules		Are self-organizing	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	3	4	4
Japan	1	5	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team	1	1	1	Unit tests, Integration tests, Automated UAT, Load tests	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	1		0	0	The whole system		Are self-organizing, Choose their own development tools	1	Scrum, Lean	5	2	5
Finland	1	4	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Smoke tests, User Acceptance Tests (UAT), Load tests	1	Unit tests, Smoke tests, User Acceptance Tests (UAT), Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	4	3	4
Mexico	1	5	1	1	1	Physical boards, Software	1	Metrics (usage, errors, load...)	1	From development team	1	1	0		0		1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	1		0	1		0.0	Choose their own development tools	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	2	2	3
Germany	1	3	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Load tests	0		1	Source code, Dependencies, Scripts	1		0	1		1.0	Choose their own development tools	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	5	3	4
Austria	1	3	1	0	1	Software	1	Metrics (usage, errors, load...)	0		1	0	0		0		1	Source code, Dependencies, Scripts	0	Git-flow	0	1		0.0	Are self-organizing	1	Scrum	5	2	3
Italy	1	4	1	1	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Load tests	1	Unit tests, Integration tests, Automated UAT, Load tests	1	Source code, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	0	Several modules		Are self-organizing	1	Scrum, Extreme Programming	4	3	3
Brazil	1	5	1	1	1	Physical boards, Software	1	Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Load tests	1	Unit tests, Smoke tests, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	1		0	0	Several modules		Are self-organizing	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together)	3	3	5
Brazil	1	4	0	0	0		1	Metrics (usage, errors, load...)	1	From client, From development team	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Source code, Dependencies, Scripts, Built files from source code, Test data management	1		0	0	The whole system		Are self-organizing	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	3	5	5
Brazil	1	5	1	1	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client	1	1	1	Unit tests, Integration tests, Smoke tests, Automated UAT	1	Unit tests, Smoke tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code, Test data management	1		1	1		1.0	Are self-organizing	1	Kanban, Hybrid (Agile and non-Agile methodologies together)	5	4	5
United States of America	1	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Smoke tests, User Acceptance Tests (UAT)	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code, Test data management	1		1	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Scrumban, Lean	5	5	5
Spain	0	2	0	0	0		0		0		0	0	0		0		1	Source code, Scripts	1		0	0	The whole system		Choose their own development tools	0		0	1	2
Spain	0	4	1	1	1	Software	0		1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Automated UAT, Load tests	1	Unit tests, Integration tests, Automated UAT, Load tests	1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban	1	4	5
Spain	0	3	0	1	1	Physical boards	1	Explicit feedback (surveys, emails...)	0		1	1	0		0		1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	1		0	0	Several modules		Are self-organizing	1	Scrum, Kanban, Extreme Programming	4	2	5
Spain	0	2	1	0	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		0	0	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	0	Multiple branches (per client, release...)	0	1		0.0	Choose their own development tools	1	Hybrid (Agile and non-Agile methodologies together)	2	1	5
Spain	0	4	1	1	1	Software	0		1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Load tests	1	Unit tests, Integration tests, Smoke tests, Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum	5	3	4
Spain	0	5	1	0	1	Software	0		1	From development team, pipeline quality analysis	1	1	1	Unit tests, Integration tests, Smoke tests	1	Unit tests, Integration tests, Smoke tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	0	git-flow like, based on https://www.plasticscm.com/branch-per-task-guide/intro/why-is-branch-per-task-better	0	0	Several modules		Are self-organizing	1	Scrum, Hybrid (Agile and non-Agile methodologies together), Extreme Programming	4	4	5
Spain	0	2	1	1	1	Software, ScrumDesk	1	Simple Scrum Product Reviews	0		1	0	1	Unit tests, Integration tests	0		1	Source code, Dependencies, Scripts	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban, Extreme Programming, Lean	3	2	3
Spain	0	4	1	1	1	Software	0		1	From client, From development team	1	0	0		0		1	Source code	1		0	0	The whole system		Are self-organizing, Choose their own development tools	1	Scrum, Kanban, Scrumban, Extreme Programming, Lean	0	1	3
Spain	0	5	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		1	1	1	User Acceptance Tests (UAT), Automated UAT	1	User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	1		1	1		1.0	Are self-organizing	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	5	4	5
Brazil	0	4	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...), brainstorms, workshops, keynotes	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrumban, Hybrid (Agile and non-Agile methodologies together), Lean	1	4	5
Spain	0	3	1	1	1	Software	1	Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT)	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	0	Git-flow	0	0	The whole system		Are self-organizing	1	Scrum, Extreme Programming	2	3	4
Spain	0	3	0	1	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		1	1	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code	0	Git-flow	0	0	Several modules		Are self-organizing	1	Scrum	2	2	4
Spain	0	4	0	1	1	Software	0		0		1	1	1	Unit tests, Integration tests	1	Unit tests	1	Source code, Scripts	0	Multiple branches (per client, release...)	0	0	Several modules		Are self-organizing	1	Scrum	3	1	1
Spain	0	4	1	0	0		1	Explicit feedback (surveys, emails...)	0		1	1	1	Unit tests, Integration tests, Automated UAT, Load tests	1	Unit tests, Integration tests, Load tests	1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code	1		0	1		1.0	Are self-organizing	1	Scrum, Hybrid (Agile and non-Agile methodologies together), Extreme Programming	2	3	4
Italy	0	4	0	1	1	Software	1	Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Integration tests	0		1	Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	1		1.0	Choose their own development tools	1	Scrum	3	3	4
Germany	0	2	1	1	1	Physical boards, Software, Agile software development methologies	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	0	1	Unit tests, Integration tests, Load tests	1	Unit tests, Integration tests, Load tests	1	Source code, Dependencies, Scripts, Test data management	1		0	1		0.0	Are self-organizing, Choose their own development tools	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	5	4	2
Denmark	0	4	1	1	1	Software	1	Explicit feedback (surveys, emails...)	1	From development team	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Load tests	1	User Acceptance Tests (UAT), Load tests	1	Source code	0	Multiple branches (per client, release...)	1	1		1.0	Are self-organizing	1	Scrum, Kanban	3	4	5
China	0	3	1	1	1	Software	1	Metrics (usage, errors, load...)	1	From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Unit tests, Integration tests	1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	1		0	1		1.0	Choose their own development tools	1	Lean	1	3	4
Italy	0	4	0	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Smoke tests, Load tests	1	Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Test data management	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	3	4	5
Germany	0	5	0	1	1	Software	0		1	From team coordinator/manager	1	1	1	Unit tests, Integration tests, Load tests	1	Unit tests, Integration tests, Load tests	1	Source code, Dependencies, Scripts, Firewall rules, Test data management	1		0	1		1.0	Are self-organizing	1	Scrum, Kanban	5	3	2
United States of America	0	4	0	0	0		1	Explicit feedback (surveys, emails...)	1	From team coordinator/manager	0	0	0		0		1	Source code	0	Git-flow	0	1		1.0	Are self-organizing	0		2	1	4
Colombia	0	4	0	1	1	Software	1	Metrics (usage, errors, load...)	0		0	0	0		0		1	Source code, Dependencies, Scripts	0	Git-flow	0	0	The whole system		Are self-organizing	1	Scrum, Extreme Programming	1	2	5
Norway	0	4	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	1		1	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban, Hybrid (Agile and non-Agile methodologies together), Lean	2	3	4
Italy	0	4	1	0	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Load tests	1	Unit tests, Integration tests, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	0	Git-flow	0	1		1.0	Are self-organizing	0		4	3	4
Denmark	0	4	1	0	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...), Participatory Design, mockups, prototyping	1	From development team	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	0		1	Source code, Dependencies, Test data management	0	Multiple branches (per client, release...)	0	1		0.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban, Extreme Programming	5	2	4
Spain	0	2	0	0	0		0		0		0	0	0		0		1	Source code, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	0	Several modules		Are self-organizing	0		0	1	2
Spain	0	4	1	0	1	Software	1	Explicit feedback (surveys, emails...)	1	From client, From development team, From team coordinator/manager	0	0	0		0		1	Source code	0	Git-flow	0	1		0.0	Are self-organizing	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	5	3	5
Denmark	0	5	1	0	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team	1	1	1	Unit tests, Integration tests	0		1	Source code, Dependencies, Test data management	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Extreme Programming	2	3	3
Russia	0	2	1	1	1	Physical boards, Software	1	Metrics (usage, errors, load...)	1	From development team	1	1	1	Load tests	1	Unit tests, Load tests	1	Source code, Dependencies	1		1	1		1.0	Are self-organizing	1	Extreme Programming	1	2	2
Denmark	0	4	1	1	1	Physical boards	0		1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Integration tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Source code, Configuration files (Travis, Puppet, Docker, Kubernetes...)	1		1	1		1.0	Choose their own development tools	1	Scrum, Kanban	3	3	5
Germany	0	5	1	1	1	Software	0		0		1	0	1	Integration tests, Smoke tests	0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code, Test data management	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Hybrid (Agile and non-Agile methodologies together)	5	4	5
China	0	3	1	1	1	Software	1	Metrics (usage, errors, load...)	1	From team coordinator/manager	1	1	1	Unit tests, Integration tests	1	Smoke tests, Load tests	1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	1	1		1.0	Choose their own development tools	1	Kanban, Lean	2	3	4
Germany	0	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...)	1	From development team, From team coordinator/manager	1	1	0		0		1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules	0	Git-flow	1	1		1.0	Are self-organizing	1	Hybrid (Agile and non-Agile methodologies together)	5	4	5
United States of America	0	5	1	0	0		0		0		1	1	1	Unit tests, Integration tests	1	Load tests	1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing	0		5	3	5
Portugal	0	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	0		1	Source code, Dependencies, Scripts	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing	1	Scrum, Kanban	5	3	4
Taiwan	0	4	0	0	1	Software	0		0		0	0	0		0		1	Source code	0	Git-flow	0	1		0.0	Are self-organizing	0		3	1	3
Costa Rica	0	4	1	1	1	Physical boards	1	Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Automated UAT, Load tests	0		1	Source code, Scripts, Test data management	0	Git-flow	0	1		1.0	Are self-organizing	1	Scrum, Kanban, Scrumban, Hybrid (Agile and non-Agile methodologies together), Lean	3	2	3
Switzerland	0	5	1	1	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Unit tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Built files from source code	1		1	1		1.0	Are self-organizing	1	Kanban, Crystal	5	3	5
Morocco	0	5	1	0	1	Software	1	Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	0	The whole system		Are self-organizing	1	Scrum	4	3	5
Spain	0	2	0	0	0		0		0		0	0	0		0		1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	1		1.0	Choose their own development tools	1	Scrum, Extreme Programming	1	1	1
India	0	4	1	1	1	Software	0		1	From development team	1	1	0		1	Unit tests, Load tests	1	Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Multiple branches (per client, release...)	0	1		1.0	Choose their own development tools	1	Extreme Programming	3	4	4
Germany	0	4	1	0	1	Software	1	Explicit feedback (surveys, emails...)	0		1	0	1	Unit tests	0		1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban	5	3	3
Spain	0	4	1	1	0		1	Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code, Configuration files (Travis, Puppet, Docker, Kubernetes...)	1		0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Hybrid (Agile and non-Agile methodologies together)	3	3	4
Switzerland	0	4	1	0	1	Software	0		1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests	1	Unit tests	1	Source code, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	1		0	1		1.0	Choose their own development tools	1	Scrum	3	3	4
Spain	0	3	1	0	1	Software	0		0		1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	0	Git-flow	0	1		1.0	Are self-organizing	0		3	2	5
Germany	0	3	1	0	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Load tests	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	0	Git-flow	0	1		1.0	Are self-organizing	1	Kanban, Hybrid (Agile and non-Agile methodologies together)	2	3	4
Spain	0	5	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		1	0	0		1	Unit tests, Integration tests, Load tests	1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Git-flow	0	1		1.0	Are self-organizing	1	Scrum	5	3	5
Bulgaria	0	2	1	0	1	Physical boards, Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		1	1	0		0		1	Source code	0	Git-flow	1	1		1.0	Choose their own development tools	1	Scrum	1	3	3
Russia	0	4	1	0	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client	1	1	1	Unit tests, Integration tests	1	Unit tests, Integration tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...)	1		1	1		1.0	Are self-organizing	1	Scrum, Kanban, Lean	3	4	4
Netherlands	0	4	0	0	0		1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	0		1	1	1	Unit tests, Integration tests, Load tests	1	Unit tests, Integration tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	0	Git-flow	0	1		0.0	Are self-organizing	1	Scrum, Lean	4	1	2
Germany	0	3	0	0	0		0		0		1	1	1	Unit tests, Integration tests, Automated UAT	0		1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...)	0	Multiple branches (per client, release...)	0	1		1.0	Are self-organizing, Choose their own development tools	1	Scrum, Kanban	2	2	3
Italy	0	4	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From client, From development team, From team coordinator/manager	1	1	1	Unit tests, Smoke tests, Automated UAT	1	Unit tests, Smoke tests, User Acceptance Tests (UAT), Automated UAT	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Test data management	1		1	0	Several modules		Are self-organizing	1	Hybrid (Agile and non-Agile methodologies together), Extreme Programming	5	2	5
Spain	0	5	1	1	1	Software	0		0		0	0	0		0		1	Source code, Dependencies, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code	1		0	1		1.0	Are self-organizing	1	Scrum, Scrumban	2	3	5
Germany	0	5	1	0	1	Software	0		1	From development team	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT), Load tests	1	Unit tests, Integration tests, Automated UAT, Load tests	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Firewall rules, Test data management	1		0	1		1.0	Are self-organizing	1	Scrum	4	4	3
United Kingdom	0	3	0	0	1	Physical boards, Software	0		1	From development team, From team coordinator/manager	1	0	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	0		1	Source code, Dependencies, Built files from source code, Test data management	1		0	0	The whole system		Are self-organizing, Choose their own development tools	1	Extreme Programming	3	3	5
China	0	3	1	0	1	Physical boards, Software	1	Explicit feedback (surveys, emails...)	1	From development team, From team coordinator/manager	1	1	1	Unit tests, User Acceptance Tests (UAT)	1	Unit tests	1	Source code, Firewall rules	1		1	1		1.0	Are self-organizing	1	Scrum	3	3	3
Spain	0	1	1	0	1	Software	0		1	From client, From team coordinator/manager	0	0	0		0		1	Source code	0	Multiple branches (per client, release...)	0	1		0.0	Choose their own development tools	0		0	3	4
Canada	0	4	1	1	1	Software	1	Explicit feedback (surveys, emails...), Metrics (usage, errors, load...)	1	From development team	1	1	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Unit tests, Integration tests, User Acceptance Tests (UAT)	1	Source code, Dependencies, Scripts, Configuration files (Travis, Puppet, Docker, Kubernetes...), Built files from source code, Test data management	1		1	1		1.0	Are self-organizing	1	Scrum, Extreme Programming	5	4	5
Spain	0	3	0	0	0		1	Explicit feedback (surveys, emails...), Meetings, discussions	0		0	0	0		1	Unit tests, Integration tests	1	Source code, Dependencies, Test data management	0	Git-flow	0	1		0.0	Choose their own development tools	0		0	2	4
